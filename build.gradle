import com.replaymod.gradle.preprocess.PreprocessTask

apply plugin: "java-library"
apply plugin: "maven-publish"
apply plugin: "fabric-loom"
apply plugin: "com.replaymod.preprocess"

base {
    version = project.mod_version
    group = project.maven_group
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

// This build.gradle file will get executed for every version in the versions/ folder.
// Depending on the fields in the gradle.properties file, you can use different mod loaders or dependencies.

dependencies {
    // To change the versions see the gradle.properties file from every version folder in versions/
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    // modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Uncomment the following line to enable the deprecated Fabric API modules.
    // These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

    // modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

preprocess {
    vars.put("MC", project.mcVersion) // This version can be used in the build script to check the Minecraft version
    vars.put("FABRIC", 1) // For forge, set FORGE to 1 and this to 0

    keywords.set([
            ".java": PreprocessTask.DEFAULT_KEYWORDS,
            ".json": PreprocessTask.DEFAULT_KEYWORDS,
            ".vert": PreprocessTask.DEFAULT_KEYWORDS,
            ".frag": PreprocessTask.DEFAULT_KEYWORDS,
    ])

    patternAnnotation.set("com.example.Pattern")
}

processResources {
    inputs.properties version: project.version, mcversion: project.minecraft_version

    filesMatching("fabric.mod.json") {
        expand "version": project.version, "mcversion": project.minecraft_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}